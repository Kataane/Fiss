name: Build-Release

on:
  workflow_dispatch:
    inputs:
      publish-fiss:
        description: "Publish Fiss to the Nuget"
        required: false
        type: boolean
        default: true
      publish-fiss-client:
        description: "Publish Fiss.Client to the Nuget"
        required: false
        type: boolean
        default: false        
      is-prerelease:
        description: "Is prerelease version"
        required: false
        type: boolean
        default: false
      tag:
        description: "tag: git tag you want create. (sample 1.0.0)"
        required: true
      dry-run:
        description: "dry-run: false = create release/nuget. true = never create release/nuget."
        required: true
        default: false
        type: boolean
        
jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - run: echo ${{ needs.update-packagejson.outputs.sha }}
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.update-packagejson.outputs.sha }}
      - uses: Kataane/Fiss/.github/actions/setup-dotnet@main
        with:
          dotnet-version: |
            7.0.x
      # pack nuget
      - run: dotnet build -c Release -p:Version=${{ inputs.tag }}
      - run: dotnet test -c Release --no-build
      - run: dotnet pack -c Release --no-build -p:Version=${{ inputs.tag }} -o ./publish
      - name: pack Fiss
        if: ${{ inputs.publish-fiss }}
        run: dotnet pack ./src/Fiss/Fiss.csproj -c Release --no-build -p:Version=${{ inputs.tag }} -o ./publish
      - name: pack Fiss.Client
        if: ${{ inputs.publish-fiss-client }}
        run: dotnet pack ./src/Fiss.Client/Fiss.Client.csproj -c Release --no-build -p:Version=${{ inputs.tag }} -o ./publish
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: ./publish   

  # release
  create-release:
    needs: [build-dotnet]
    uses: Kataane/Fiss/.github/workflows/create-release.yaml@main
    with:
      dry-run: ${{ inputs.dry-run }}
      commit-id: ${{ needs.update-packagejson.outputs.sha }}
      tag: ${{ inputs.tag }}
      push-tag: true
      prerelease: ${{ inputs.prerelease }}
      nuget-push: true
